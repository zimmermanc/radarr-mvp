# =============================================================================
# Radarr MVP Environment Configuration
# =============================================================================
# Copy this file to .env and update values for your environment
# Lines starting with # are comments - remove # to enable a setting

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =============================================================================

# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://radarr:radarr@localhost:5432/radarr

# Database connection pool settings
DATABASE_MAX_CONNECTIONS=10
DATABASE_CONNECT_TIMEOUT=30
DATABASE_LOG_QUERIES=false

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Server binding address (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
RADARR_HOST=0.0.0.0

# Server port (default Radarr port is 7878)
RADARR_PORT=7878

# Maximum concurrent connections to the server
RADARR_MAX_CONNECTIONS=1000

# Request timeout in seconds
RADARR_REQUEST_TIMEOUT=30

# =============================================================================
# PROWLARR INDEXER CONFIGURATION
# =============================================================================

# Prowlarr server URL
PROWLARR_BASE_URL=http://localhost:9696

# Prowlarr API key (get from Prowlarr Settings > General > Security)
PROWLARR_API_KEY=your_prowlarr_api_key_here

# Connection timeout in seconds
PROWLARR_TIMEOUT=30

# Rate limiting (requests per minute)
PROWLARR_RATE_LIMIT=60

# User agent for requests
PROWLARR_USER_AGENT=Radarr-Rust/1.0

# SSL certificate verification (set to false for self-signed certificates)
PROWLARR_VERIFY_SSL=true

# =============================================================================
# QBITTORRENT DOWNLOADER CONFIGURATION
# =============================================================================

# qBittorrent WebUI URL
QBITTORRENT_BASE_URL=http://localhost:8080

# qBittorrent login credentials
QBITTORRENT_USERNAME=admin
QBITTORRENT_PASSWORD=your_qbittorrent_password_here

# Connection timeout in seconds
QBITTORRENT_TIMEOUT=30

# =============================================================================
# IMPORT PIPELINE CONFIGURATION
# =============================================================================

# Root directories for media management
# IMPORT_SOURCE_DIR=/downloads/movies
# IMPORT_DESTINATION_DIR=/movies

# Import behavior settings
IMPORT_DRY_RUN=false
IMPORT_MIN_CONFIDENCE=0.3
IMPORT_SKIP_SAMPLES=true
IMPORT_CONTINUE_ON_ERROR=true
IMPORT_MAX_PARALLEL=4

# File scanning settings
# SCAN_RECURSIVE=true
# SCAN_FOLLOW_SYMLINKS=false
# SCAN_MAX_DEPTH=10

# Hardlink settings
# HARDLINK_ENABLED=true
# HARDLINK_FALLBACK_TO_COPY=true
# HARDLINK_PRESERVE_PERMISSIONS=true

# Rename settings
# RENAME_MOVIE_TEMPLATE={Movie Title} ({Release Year}) - {Quality Full}
# RENAME_FOLDER_TEMPLATE={Movie Title} ({Release Year})

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level: trace, debug, info, warn, error
RUST_LOG=info

# Enable JSON formatted logs (useful for log aggregation)
LOG_JSON_FORMAT=false

# Optional: Log to file instead of stdout
# LOG_FILE=/var/log/radarr/radarr.log

# =============================================================================
# SECURITY & API CONFIGURATION
# =============================================================================

# API key for Radarr API access (generate a random string)
# RADARR_API_KEY=your_radarr_api_key_here

# Enable API key authentication
# API_KEY_REQUIRED=true

# CORS settings for web interface
# CORS_ALLOWED_ORIGINS=http://localhost:3000,https://your-domain.com

# =============================================================================
# HDBITS ANALYSIS CONFIGURATION (Optional)
# =============================================================================

# HDBits credentials for scene group analysis
# Leave empty to disable HDBits integration
# HDBITS_USERNAME=your_hdbits_username
# HDBITS_PASSKEY=your_hdbits_passkey_here

# HDBits API settings
# HDBITS_API_URL=https://hdbits.org/api/torrents
# HDBITS_RATE_LIMIT_PER_HOUR=150

# =============================================================================
# TMDB (The Movie Database) CONFIGURATION
# =============================================================================

# TMDB API key for movie metadata (required for movie matching)
# Get from: https://www.themoviedb.org/settings/api
# TMDB_API_KEY=your_tmdb_api_key_here

# TMDB API settings
# TMDB_BASE_URL=https://api.themoviedb.org/3
# TMDB_RATE_LIMIT_PER_SECOND=40

# =============================================================================
# PERFORMANCE & MONITORING
# =============================================================================

# Metrics server port (for Prometheus monitoring)
METRICS_PORT=9090

# Health check interval in seconds
HEALTH_CHECK_INTERVAL=30

# Maximum concurrent downloads
MAX_CONCURRENT_DOWNLOADS=5

# Download timeout in seconds
DOWNLOAD_TIMEOUT=300

# Cleanup interval in seconds (for removing old logs, temp files, etc.)
CLEANUP_INTERVAL=3600

# =============================================================================
# REDIS CONFIGURATION (Optional - for caching and job queues)
# =============================================================================

# Redis connection string
# REDIS_URL=redis://localhost:6379

# Redis password (if authentication is enabled)
# REDIS_PASSWORD=your_redis_password_here

# Redis database number (0-15)
# REDIS_DB=0

# Redis connection pool settings
# REDIS_MAX_CONNECTIONS=10
# REDIS_CONNECT_TIMEOUT=30

# =============================================================================
# DEVELOPMENT & TESTING SETTINGS
# =============================================================================

# Enable development mode (more verbose logging, hot reloading, etc.)
# DEVELOPMENT_MODE=false

# Test database URL (for running tests)
# TEST_DATABASE_URL=postgresql://radarr:test@localhost:5432/radarr_test

# Enable mock services for testing
# MOCK_PROWLARR=false
# MOCK_QBITTORRENT=false

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Database query timeout in seconds
# DATABASE_QUERY_TIMEOUT=30

# Enable database connection health checks
# DATABASE_HEALTH_CHECK_ENABLED=true

# Connection retry settings
# CONNECTION_RETRY_ATTEMPTS=3
# CONNECTION_RETRY_DELAY=5

# Memory limits
# MAX_MEMORY_USAGE_MB=512

# Concurrent processing limits
# MAX_CONCURRENT_SEARCHES=10
# MAX_CONCURRENT_DOWNLOADS=5
# MAX_CONCURRENT_IMPORTS=4

# File system settings
# FILESYSTEM_CASE_SENSITIVE=true
# FILESYSTEM_MAX_PATH_LENGTH=260

# =============================================================================
# KUBERNETES SPECIFIC SETTINGS
# =============================================================================
# These are automatically set when running in Kubernetes
# Only uncomment if you need to override default behavior

# Kubernetes namespace
# K8S_NAMESPACE=unified-radarr

# Pod name (for logging and metrics)
# K8S_POD_NAME=unified-radarr-pod

# Service discovery
# K8S_SERVICE_DISCOVERY=true

# =============================================================================
# MIGRATION SETTINGS
# =============================================================================

# Run database migrations on startup
# RUN_MIGRATIONS_ON_STARTUP=true

# Migration timeout in seconds
# MIGRATION_TIMEOUT=300

# =============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# =============================================================================

# --- DEVELOPMENT ENVIRONMENT ---
# DATABASE_URL=postgresql://radarr:radarr@localhost:5432/radarr_dev
# RADARR_PORT=7878
# RUST_LOG=debug
# DEVELOPMENT_MODE=true
# IMPORT_DRY_RUN=true

# --- STAGING ENVIRONMENT ---
# DATABASE_URL=postgresql://radarr:secure_password@postgres-staging:5432/radarr_staging
# RADARR_PORT=7878
# RUST_LOG=info
# LOG_JSON_FORMAT=true
# API_KEY_REQUIRED=true

# --- PRODUCTION ENVIRONMENT ---
# DATABASE_URL=postgresql://radarr:very_secure_password@postgres-prod:5432/radarr_prod
# RADARR_PORT=7878
# RUST_LOG=warn
# LOG_JSON_FORMAT=true
# API_KEY_REQUIRED=true
# DATABASE_MAX_CONNECTIONS=20
# RADARR_MAX_CONNECTIONS=2000
# METRICS_PORT=9090

# =============================================================================
# NOTES
# =============================================================================
# 
# 1. REQUIRED SETTINGS:
#    - DATABASE_URL: PostgreSQL connection string
#    - PROWLARR_API_KEY: Get from Prowlarr settings
#    - QBITTORRENT_PASSWORD: Your qBittorrent password
# 
# 2. RECOMMENDED SETTINGS:
#    - TMDB_API_KEY: For movie metadata (free from TMDB)
#    - RADARR_API_KEY: Generate a random 32-character string
# 
# 3. SECURITY CONSIDERATIONS:
#    - Never commit .env files to version control
#    - Use strong passwords and API keys
#    - Enable SSL verification in production
#    - Consider using environment-specific secrets management
# 
# 4. PERFORMANCE TUNING:
#    - Adjust DATABASE_MAX_CONNECTIONS based on your PostgreSQL limits
#    - Tune RADARR_MAX_CONNECTIONS based on expected load
#    - Monitor memory usage and adjust MAX_MEMORY_USAGE_MB if needed
# 
# 5. FOR DOCKER DEPLOYMENT:
#    - Use service names instead of localhost (e.g., postgres, prowlarr, qbittorrent)
#    - Ensure network connectivity between containers
#    - Consider using Docker secrets for sensitive values
# 
# 6. FOR KUBERNETES DEPLOYMENT:
#    - Use ConfigMaps for non-sensitive configuration
#    - Use Secrets for sensitive values (passwords, API keys)
#    - Service discovery will automatically resolve service names
# 
# =============================================================================