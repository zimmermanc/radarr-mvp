name: PR Validation

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  # Lightweight PR validation
  pr-checks:
    name: PR Validation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - uses: actions/checkout@v4
      
      - name: PR size check
        run: |
          files_changed=$(git diff --name-only HEAD~1..HEAD | wc -l)
          lines_changed=$(git diff --shortstat HEAD~1..HEAD | grep -oE '[0-9]+' | head -1 || echo "0")
          
          echo "Files changed: $files_changed"
          echo "Lines changed: $lines_changed"
          
          if [ "$files_changed" -gt 50 ]; then
            echo "⚠️ Large PR: $files_changed files changed"
            echo "Consider breaking this into smaller PRs for easier review"
          fi
          
          if [ "$lines_changed" -gt 1000 ]; then
            echo "⚠️ Large PR: $lines_changed lines changed"
            echo "Consider breaking this into smaller PRs for easier review"
          fi
      
      - name: Check conventional commits
        run: |
          commit_msg=$(git log --format=%s -1)
          if ! echo "$commit_msg" | grep -qE '^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?\!?:'; then
            echo "⚠️ Commit message doesn't follow conventional commits format"
            echo "Current: $commit_msg"
            echo "Expected: type(scope): description"
            echo "Examples: feat: add new feature, fix: resolve bug, docs: update readme"
          else
            echo "✅ Commit message follows conventional commits format"
          fi
      
      - name: Check for breaking changes
        run: |
          if git diff --name-only HEAD~1..HEAD | grep -E '(migration|schema|api)'; then
            echo "⚠️ Changes detected in critical files (migrations/schema/api)"
            echo "Please ensure backward compatibility and proper testing"
          fi
      
      - name: Basic Rust syntax check (fast)
        run: |
          cd unified-radarr
          cargo check --workspace