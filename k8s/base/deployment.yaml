apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr-mvp
  namespace: radarr-mvp
  labels:
    app.kubernetes.io/name: radarr-mvp
    app.kubernetes.io/component: application
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: radarr-mvp
      app.kubernetes.io/component: application
  template:
    metadata:
      labels:
        app.kubernetes.io/name: radarr-mvp
        app.kubernetes.io/component: application
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "7878"
        prometheus.io/path: "/metrics"
        instrumentation.opentelemetry.io/inject-auto: "true"
        instrumentation.opentelemetry.io/container-names: "radarr-mvp"
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-cpu-request: "10m"
        config.linkerd.io/proxy-memory-request: "64Mi"
    spec:
      serviceAccountName: radarr-mvp
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups: [1000]
      containers:
      - name: radarr-mvp
        image: radarr-mvp:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 7878
          name: http
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: radarr-mvp-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: radarr-mvp-secrets
              key: REDIS_URL
        - name: PROWLARR_API_KEY
          valueFrom:
            secretKeyRef:
              name: radarr-mvp-secrets
              key: PROWLARR_API_KEY
        - name: QBITTORRENT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: radarr-mvp-secrets
              key: QBITTORRENT_PASSWORD
        - name: TMDB_API_KEY
          valueFrom:
            secretKeyRef:
              name: radarr-mvp-secrets
              key: TMDB_API_KEY
        - name: RADARR_API_KEY
          valueFrom:
            secretKeyRef:
              name: radarr-mvp-secrets
              key: RADARR_API_KEY
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: radarr-mvp-secrets
              key: JWT_SECRET
        envFrom:
        - configMapRef:
            name: radarr-mvp-config
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
            ephemeral-storage: 1Gi
          limits:
            cpu: 1000m
            memory: 1Gi
            ephemeral-storage: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        volumeMounts:
        - name: radarr-data
          mountPath: /var/lib/radarr
        - name: radarr-logs
          mountPath: /var/log/radarr
        - name: tmp
          mountPath: /tmp
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
            add: []
          privileged: false
      volumes:
      - name: radarr-data
        persistentVolumeClaim:
          claimName: radarr-data-pvc
      - name: radarr-logs
        persistentVolumeClaim:
          claimName: radarr-logs-pvc
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - radarr-mvp
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: radarr-mvp
  namespace: radarr-mvp
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-data-pvc
  namespace: radarr-mvp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: radarr-logs-pvc
  namespace: radarr-mvp
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd