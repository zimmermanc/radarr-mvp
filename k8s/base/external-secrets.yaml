# External Secrets Operator - Modern secret management
# Integrates with AWS Secrets Manager, Azure Key Vault, HashiCorp Vault, etc.
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: radarr-mvp-secretstore
  namespace: radarr-mvp
  labels:
    app.kubernetes.io/name: radarr-mvp
    app.kubernetes.io/component: secrets
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-west-2
      auth:
        jwt:
          serviceAccountRef:
            name: radarr-mvp-external-secrets
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: radarr-mvp-external-secret
  namespace: radarr-mvp
  labels:
    app.kubernetes.io/name: radarr-mvp
    app.kubernetes.io/component: secrets
spec:
  refreshInterval: 300s
  secretStoreRef:
    name: radarr-mvp-secretstore
    kind: SecretStore
  target:
    name: radarr-mvp-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: radarr-mvp
          app.kubernetes.io/component: secrets
        annotations:
          reloader.stakater.com/match: "true"
      data:
        DATABASE_URL: "postgresql://{{ .database_username }}:{{ .database_password }}@{{ .database_host }}:5432/{{ .database_name }}?sslmode=require"
        REDIS_URL: "redis://{{ .redis_password }}@{{ .redis_host }}:6379/0"
        JWT_SECRET: "{{ .jwt_secret }}"
        RADARR_API_KEY: "{{ .radarr_api_key }}"
        TMDB_API_KEY: "{{ .tmdb_api_key }}"
        PROWLARR_API_KEY: "{{ .prowlarr_api_key }}"
        QBITTORRENT_PASSWORD: "{{ .qbittorrent_password }}"
  data:
  - secretKey: database_username
    remoteRef:
      key: radarr-mvp/database
      property: username
  - secretKey: database_password
    remoteRef:
      key: radarr-mvp/database
      property: password
  - secretKey: database_host
    remoteRef:
      key: radarr-mvp/database
      property: host
  - secretKey: database_name
    remoteRef:
      key: radarr-mvp/database
      property: name
  - secretKey: redis_password
    remoteRef:
      key: radarr-mvp/redis
      property: password
  - secretKey: redis_host
    remoteRef:
      key: radarr-mvp/redis
      property: host
  - secretKey: jwt_secret
    remoteRef:
      key: radarr-mvp/application
      property: jwt_secret
  - secretKey: radarr_api_key
    remoteRef:
      key: radarr-mvp/application
      property: radarr_api_key
  - secretKey: tmdb_api_key
    remoteRef:
      key: radarr-mvp/external-apis
      property: tmdb_api_key
  - secretKey: prowlarr_api_key
    remoteRef:
      key: radarr-mvp/external-apis
      property: prowlarr_api_key
  - secretKey: qbittorrent_password
    remoteRef:
      key: radarr-mvp/downloaders
      property: qbittorrent_password
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: radarr-mvp-external-secrets
  namespace: radarr-mvp
  labels:
    app.kubernetes.io/name: radarr-mvp
    app.kubernetes.io/component: secrets
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/radarr-mvp-external-secrets-role
automountServiceAccountToken: true
---
# Alternative HashiCorp Vault configuration
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: radarr-mvp-vault-secretstore
  namespace: radarr-mvp
  labels:
    app.kubernetes.io/name: radarr-mvp
    app.kubernetes.io/component: vault-secrets
spec:
  provider:
    vault:
      server: "https://vault.yourdomain.com"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "radarr-mvp-role"
          serviceAccountRef:
            name: radarr-mvp-vault
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: radarr-mvp-vault
  namespace: radarr-mvp
  labels:
    app.kubernetes.io/name: radarr-mvp
    app.kubernetes.io/component: vault-secrets
automountServiceAccountToken: true
---
# Azure Key Vault configuration
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: radarr-mvp-azure-secretstore
  namespace: radarr-mvp
  labels:
    app.kubernetes.io/name: radarr-mvp
    app.kubernetes.io/component: azure-secrets
spec:
  provider:
    azurekv:
      vaultUrl: "https://radarr-mvp-vault.vault.azure.net/"
      authType: WorkloadIdentity
      serviceAccountRef:
        name: radarr-mvp-azure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: radarr-mvp-azure
  namespace: radarr-mvp
  labels:
    app.kubernetes.io/name: radarr-mvp
    app.kubernetes.io/component: azure-secrets
  annotations:
    azure.workload.identity/client-id: "CLIENT_ID"
    azure.workload.identity/tenant-id: "TENANT_ID"
automountServiceAccountToken: true