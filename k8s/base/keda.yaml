apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: radarr-mvp-scaledobject
  namespace: radarr-mvp
  labels:
    app.kubernetes.io/name: radarr-mvp
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    name: radarr-mvp
  pollingInterval: 30
  cooldownPeriod: 300
  idleReplicaCount: 2
  minReplicaCount: 3
  maxReplicaCount: 20
  fallback:
    failureThreshold: 3
    replicas: 5
  advanced:
    restoreToOriginalReplicaCount: true
    horizontalPodAutoscalerConfig:
      name: radarr-mvp-keda-hpa
      behavior:
        scaleDown:
          stabilizationWindowSeconds: 300
          policies:
          - type: Percent
            value: 20
            periodSeconds: 60
          - type: Pods
            value: 2
            periodSeconds: 60
          selectPolicy: Min
        scaleUp:
          stabilizationWindowSeconds: 30
          policies:
          - type: Percent
            value: 100
            periodSeconds: 15
          - type: Pods
            value: 5
            periodSeconds: 30
          selectPolicy: Max
  triggers:
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-service.monitoring.svc.cluster.local:9090
      metricName: http_requests_per_second
      threshold: '30'
      query: sum(rate(http_requests_total{job="radarr-mvp"}[2m]))
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-service.monitoring.svc.cluster.local:9090
      metricName: cpu_usage_percent
      threshold: '60'
      query: avg(rate(container_cpu_usage_seconds_total{pod=~"radarr-mvp-.*"}[2m])) * 100
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-service.monitoring.svc.cluster.local:9090
      metricName: memory_usage_percent
      threshold: '70'
      query: avg(container_memory_working_set_bytes{pod=~"radarr-mvp-.*"} / container_spec_memory_limit_bytes{pod=~"radarr-mvp-.*"}) * 100
  - type: redis
    metadata:
      address: redis-service.radarr-mvp.svc.cluster.local:6379
      listName: radarr-work-queue
      listLength: '10'
      enableTLS: 'false'
---
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: radarr-mvp-redis-auth
  namespace: radarr-mvp
spec:
  secretTargetRef:
  - parameter: password
    name: radarr-mvp-secrets
    key: REDIS_PASSWORD