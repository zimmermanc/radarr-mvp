apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

metadata:
  name: observability-stack
  annotations:
    config.kubernetes.io/local-config: "true"

namespace: monitoring

resources:
  # OpenTelemetry Collector
  - otel-collector-config.yaml
  - otel-collector.yaml
  
  # Prometheus with Thanos
  - prometheus-stack.yaml
  
  # Grafana with Dashboards
  - grafana-deployment.yaml
  - grafana-dashboards.yaml
  
  # Loki Stack (Logs)
  - loki-stack.yaml
  
  # Tempo (Traces)
  - tempo.yaml
  
  # Alertmanager
  - alertmanager.yaml

commonLabels:
  environment: production
  stack: observability
  managed-by: kustomize

commonAnnotations:
  deployment.kubernetes.io/revision: "1"
  meta.helm.sh/release-name: observability-stack
  meta.helm.sh/release-namespace: monitoring

images:
  - name: otel/opentelemetry-collector-contrib
    newTag: 0.91.0
  - name: prom/prometheus
    newTag: v2.47.0
  - name: thanosio/thanos
    newTag: v0.32.4
  - name: grafana/grafana
    newTag: 10.2.0
  - name: grafana/loki
    newTag: 2.9.0
  - name: grafana/promtail
    newTag: 2.9.0
  - name: grafana/tempo
    newTag: 2.2.0
  - name: jaegertracing/jaeger-query
    newTag: 1.50.0
  - name: prom/alertmanager
    newTag: v0.26.0

patchesStrategicMerge:
  - |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: grafana
      namespace: monitoring
    spec:
      template:
        metadata:
          annotations:
            prometheus.io/scrape: "true"
            prometheus.io/port: "3000"
            prometheus.io/path: "/metrics"

configMapGenerator:
  - name: monitoring-env-config
    literals:
      - ENVIRONMENT=production
      - CLUSTER_NAME=radarr-cluster
      - PROMETHEUS_RETENTION=30d
      - LOKI_RETENTION=7d
      - TEMPO_RETENTION=7d
      - ALERTMANAGER_CLUSTER_GOSSIP=true

secretGenerator:
  - name: monitoring-secrets
    literals:
      - grafana-admin-password=radarr-admin-2024
      - prometheus-remote-write-token=placeholder-token
      - alertmanager-slack-webhook=placeholder-webhook
    type: Opaque

patches:
  # Add environment variables to all deployments
  - target:
      kind: Deployment
      labelSelector: component=observability
    patch: |-
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value:
          name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: monitoring-env-config
              key: ENVIRONMENT
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value:
          name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: monitoring-env-config
              key: CLUSTER_NAME

  # Add resource limits for production
  - target:
      kind: Deployment
      name: prometheus
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/resources/limits/memory
        value: 4Gi
      - op: replace
        path: /spec/template/spec/containers/0/resources/limits/cpu
        value: 2000m

  # Add anti-affinity rules for high availability
  - target:
      kind: Deployment
      labelSelector: app=prometheus
    patch: |-
      - op: add
        path: /spec/template/spec/affinity
        value:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - prometheus
                topologyKey: kubernetes.io/hostname

  # Add monitoring namespace if it doesn't exist
  - target:
      kind: Namespace
      name: monitoring
    patch: |-
      apiVersion: v1
      kind: Namespace
      metadata:
        name: monitoring
        labels:
          name: monitoring
          istio-injection: disabled
        annotations:
          prometheus.io/scrape: "true"

replicas:
  - name: prometheus
    count: 2
  - name: otel-collector
    count: 2
  - name: grafana
    count: 1
  - name: loki
    count: 1
  - name: tempo
    count: 1

vars:
  - name: MONITORING_NAMESPACE
    objref:
      kind: Namespace
      name: monitoring
      apiVersion: v1
    fieldref:
      fieldpath: metadata.name

  - name: PROMETHEUS_SERVICE
    objref:
      kind: Service
      name: prometheus
      apiVersion: v1
    fieldref:
      fieldpath: metadata.name

  - name: GRAFANA_SERVICE
    objref:
      kind: Service
      name: grafana
      apiVersion: v1
    fieldref:
      fieldpath: metadata.name