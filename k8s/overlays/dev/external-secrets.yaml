# External Secrets Operator configuration for development environment
# Syncs secrets from Google Secret Manager to Kubernetes secrets

apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: gcpsm-secret-store
  namespace: unified-radarr
spec:
  provider:
    gcpsm:
      projectId: "unified-radarr-dev"  # Replace with actual project ID
      auth:
        workloadIdentity:
          clusterLocation: us-central1
          clusterName: unified-radarr-dev
          serviceAccountRef:
            name: unified-radarr
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: radarr-secrets-sync
  namespace: unified-radarr
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: gcpsm-secret-store
    kind: SecretStore
  target:
    name: unified-radarr-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        POSTGRES_PASSWORD: "{{ .postgres_password }}"
        REDIS_PASSWORD: "{{ .redis_password }}"
        JWT_SECRET: "{{ .jwt_secret }}"
        GRAFANA_PASSWORD: "{{ .grafana_password }}"
        # API keys can be set manually in dev or synced from Secret Manager
        HDBITS_API_KEY: "dev-placeholder-key"
        TMDB_API_KEY: "dev-placeholder-key"
  data:
  - secretKey: postgres_password
    remoteRef:
      key: radarr-postgres-password-dev
  - secretKey: redis_password
    remoteRef:
      key: radarr-redis-password-dev
  - secretKey: jwt_secret
    remoteRef:
      key: radarr-jwt-secret-dev
  - secretKey: grafana_password
    remoteRef:
      key: radarr-grafana-admin-password-dev
---
# PostgreSQL auth secret sync
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-auth-sync
  namespace: unified-radarr
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: gcpsm-secret-store
    kind: SecretStore
  target:
    name: postgres-auth
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        username: "radarr"
        password: "{{ .postgres_password }}"
  data:
  - secretKey: postgres_password
    remoteRef:
      key: radarr-postgres-password-dev
---
# Redis auth secret sync
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-auth-sync
  namespace: unified-radarr
spec:
  refreshInterval: 15m
  secretStoreRef:
    name: gcpsm-secret-store
    kind: SecretStore
  target:
    name: redis-auth
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        password: "{{ .redis_password }}"
  data:
  - secretKey: redis_password
    remoteRef:
      key: radarr-redis-password-dev