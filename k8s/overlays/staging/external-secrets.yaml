# External Secrets Operator configuration for staging environment
# Production-like secret management with enhanced monitoring

apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: gcpsm-secret-store
  namespace: unified-radarr
spec:
  provider:
    gcpsm:
      projectId: "unified-radarr-staging"  # Replace with actual project ID
      auth:
        workloadIdentity:
          clusterLocation: us-central1
          clusterName: unified-radarr-staging
          serviceAccountRef:
            name: unified-radarr
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: radarr-secrets-sync
  namespace: unified-radarr
  annotations:
    external-secrets.io/refresh-interval: "5m"  # More frequent refresh for staging
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: gcpsm-secret-store
    kind: SecretStore
  target:
    name: unified-radarr-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        annotations:
          last-synced: "{{ now | date \"2006-01-02T15:04:05Z07:00\" }}"
      data:
        POSTGRES_PASSWORD: "{{ .postgres_password }}"
        REDIS_PASSWORD: "{{ .redis_password }}"
        JWT_SECRET: "{{ .jwt_secret }}"
        GRAFANA_PASSWORD: "{{ .grafana_password }}"
        HDBITS_API_KEY: "{{ .hdbits_api_key }}"
        TMDB_API_KEY: "{{ .tmdb_api_key }}"
  data:
  - secretKey: postgres_password
    remoteRef:
      key: radarr-postgres-password-staging
  - secretKey: redis_password
    remoteRef:
      key: radarr-redis-password-staging
  - secretKey: jwt_secret
    remoteRef:
      key: radarr-jwt-secret-staging
  - secretKey: grafana_password
    remoteRef:
      key: radarr-grafana-admin-password-staging
  - secretKey: hdbits_api_key
    remoteRef:
      key: radarr-hdbits-api-key-staging
  - secretKey: tmdb_api_key
    remoteRef:
      key: radarr-tmdb-api-key-staging
---
# PostgreSQL auth secret sync
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-auth-sync
  namespace: unified-radarr
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: gcpsm-secret-store
    kind: SecretStore
  target:
    name: postgres-auth
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        annotations:
          last-synced: "{{ now | date \"2006-01-02T15:04:05Z07:00\" }}"
      data:
        username: "radarr"
        password: "{{ .postgres_password }}"
  data:
  - secretKey: postgres_password
    remoteRef:
      key: radarr-postgres-password-staging
---
# Redis auth secret sync  
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-auth-sync
  namespace: unified-radarr
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: gcpsm-secret-store
    kind: SecretStore
  target:
    name: redis-auth
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        annotations:
          last-synced: "{{ now | date \"2006-01-02T15:04:05Z07:00\" }}"
      data:
        password: "{{ .redis_password }}"
  data:
  - secretKey: redis_password
    remoteRef:
      key: radarr-redis-password-staging
---
# Secret monitoring and alerting
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: external-secrets-metrics
  namespace: unified-radarr
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: external-secrets
  endpoints:
  - port: metrics